
package sw;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.5
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ConversionSW", targetNamespace = "http://sw/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ConversionSW {


    /**
     * 
     * @param pot
     * @param num
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Npotencia")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Npotencia", targetNamespace = "http://sw/", className = "sw.Npotencia")
    @ResponseWrapper(localName = "NpotenciaResponse", targetNamespace = "http://sw/", className = "sw.NpotenciaResponse")
    @Action(input = "http://sw/ConversionSW/NpotenciaRequest", output = "http://sw/ConversionSW/NpotenciaResponse")
    public Double npotencia(
        @WebParam(name = "num", targetNamespace = "")
        int num,
        @WebParam(name = "pot", targetNamespace = "")
        int pot);

    /**
     * 
     * @param num
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "PAR_IMPAR")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "PAR_IMPAR", targetNamespace = "http://sw/", className = "sw.PARIMPAR")
    @ResponseWrapper(localName = "PAR_IMPARResponse", targetNamespace = "http://sw/", className = "sw.PARIMPARResponse")
    @Action(input = "http://sw/ConversionSW/PAR_IMPARRequest", output = "http://sw/ConversionSW/PAR_IMPARResponse")
    public String parIMPAR(
        @WebParam(name = "num", targetNamespace = "")
        int num);

    /**
     * 
     * @param palabra
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Diccionario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Diccionario", targetNamespace = "http://sw/", className = "sw.Diccionario")
    @ResponseWrapper(localName = "DiccionarioResponse", targetNamespace = "http://sw/", className = "sw.DiccionarioResponse")
    @Action(input = "http://sw/ConversionSW/DiccionarioRequest", output = "http://sw/ConversionSW/DiccionarioResponse")
    public String diccionario(
        @WebParam(name = "palabra", targetNamespace = "")
        String palabra);

    /**
     * 
     * @param num1
     * @param num2
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Multiplicacion")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Multiplicacion", targetNamespace = "http://sw/", className = "sw.Multiplicacion")
    @ResponseWrapper(localName = "MultiplicacionResponse", targetNamespace = "http://sw/", className = "sw.MultiplicacionResponse")
    @Action(input = "http://sw/ConversionSW/MultiplicacionRequest", output = "http://sw/ConversionSW/MultiplicacionResponse")
    public Double multiplicacion(
        @WebParam(name = "num1", targetNamespace = "")
        double num1,
        @WebParam(name = "num2", targetNamespace = "")
        double num2);

    /**
     * 
     * @param num1
     * @param num2
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Resta")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Resta", targetNamespace = "http://sw/", className = "sw.Resta")
    @ResponseWrapper(localName = "RestaResponse", targetNamespace = "http://sw/", className = "sw.RestaResponse")
    @Action(input = "http://sw/ConversionSW/RestaRequest", output = "http://sw/ConversionSW/RestaResponse")
    public Double resta(
        @WebParam(name = "num1", targetNamespace = "")
        double num1,
        @WebParam(name = "num2", targetNamespace = "")
        double num2);

    /**
     * 
     * @param num1
     * @param num2
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Division")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Division", targetNamespace = "http://sw/", className = "sw.Division")
    @ResponseWrapper(localName = "DivisionResponse", targetNamespace = "http://sw/", className = "sw.DivisionResponse")
    @Action(input = "http://sw/ConversionSW/DivisionRequest", output = "http://sw/ConversionSW/DivisionResponse")
    public Double division(
        @WebParam(name = "num1", targetNamespace = "")
        double num1,
        @WebParam(name = "num2", targetNamespace = "")
        double num2);

    /**
     * 
     * @param cedula
     * @param contrasena
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "Login")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Login", targetNamespace = "http://sw/", className = "sw.Login")
    @ResponseWrapper(localName = "LoginResponse", targetNamespace = "http://sw/", className = "sw.LoginResponse")
    @Action(input = "http://sw/ConversionSW/LoginRequest", output = "http://sw/ConversionSW/LoginResponse")
    public Boolean login(
        @WebParam(name = "Cedula", targetNamespace = "")
        String cedula,
        @WebParam(name = "Contrasena", targetNamespace = "")
        String contrasena);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://sw/", className = "sw.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://sw/", className = "sw.HelloResponse")
    @Action(input = "http://sw/ConversionSW/helloRequest", output = "http://sw/ConversionSW/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param num1
     * @param num2
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Suma")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Suma", targetNamespace = "http://sw/", className = "sw.Suma")
    @ResponseWrapper(localName = "SumaResponse", targetNamespace = "http://sw/", className = "sw.SumaResponse")
    @Action(input = "http://sw/ConversionSW/SumaRequest", output = "http://sw/ConversionSW/SumaResponse")
    public Double suma(
        @WebParam(name = "num1", targetNamespace = "")
        double num1,
        @WebParam(name = "num2", targetNamespace = "")
        double num2);

}
